package restaurante.Vistas;


import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.SpinnerNumberModel;
import javax.swing.table.DefaultTableModel;
import restaurante.AccesoDatos.ProductoData;
import restaurante.Entidades.Producto;

public class FormularioProducto extends javax.swing.JInternalFrame {
    
    private DefaultTableModel modelo1 = new DefaultTableModel();
    private DefaultTableModel modelo2 = new DefaultTableModel();
    
    public boolean isCellEditable(int f, int c){
        return false;
    }
    
    private ProductoData pd;
    private List<Producto> listarPro;
    
    public FormularioProducto() {
        initComponents();
        
        SpinnerNumberModel num = new SpinnerNumberModel();
        num.setMinimum(0);
        jsProducto.setModel(num);
        SpinnerNumberModel num1 = new SpinnerNumberModel();
        num1.setMinimum(0);
        jsStock.setModel(num1);

        pd = new ProductoData();
        armarCabeceraP1();
        armarTablaP1();
        armarCabeceraP2();
        armarTablaP2();
        
        desactivarCampos();
        jbLimpiar.setEnabled(false);
     
        jbGuardar.setEnabled(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jsProducto = new javax.swing.JSpinner();
        jbBuscar = new javax.swing.JButton();
        jtNombreProducto = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jtDescProducto = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jtPrecio = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jsStock = new javax.swing.JSpinner();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableP1 = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jrbEstadoProd = new javax.swing.JRadioButton();
        jbGuardar = new javax.swing.JButton();
        jbNuevo = new javax.swing.JButton();
        jbLimpiar = new javax.swing.JButton();
        jToggleButton1 = new javax.swing.JToggleButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableP2 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        setTitle("Registro De Los Productos");
        setName(""); // NOI18N
        setPreferredSize(new java.awt.Dimension(780, 957));

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));
        jPanel1.setPreferredSize(new java.awt.Dimension(797, 923));

        jbBuscar.setText("Buscar");
        jbBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarActionPerformed(evt);
            }
        });

        jtNombreProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtNombreProductoActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Eras Light ITC", 1, 14)); // NOI18N
        jLabel3.setText("Nombre del Producto");

        jLabel4.setFont(new java.awt.Font("Eras Light ITC", 1, 12)); // NOI18N
        jLabel4.setText("Descripcion del Producto");

        jLabel7.setFont(new java.awt.Font("Eras Light ITC", 1, 14)); // NOI18N
        jLabel7.setText("Precio");

        jLabel5.setFont(new java.awt.Font("Eras Light ITC", 1, 14)); // NOI18N
        jLabel5.setText("$");

        jLabel1.setFont(new java.awt.Font("Eras Light ITC", 1, 14)); // NOI18N
        jLabel1.setText("Stock");

        jLabel6.setFont(new java.awt.Font("Eras Light ITC", 1, 14)); // NOI18N
        jLabel6.setText("Estado");

        jTableP1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Producto"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableP1.setFocusable(false);
        jTableP1 = new javax.swing.JTable(){
            public boolean isCellEditable (int f , int c){
                return false;
            }
        };
        jTableP1.getTableHeader().setResizingAllowed(false);
        jTableP1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTableP1);
        if (jTableP1.getColumnModel().getColumnCount() > 0) {
            jTableP1.getColumnModel().getColumn(0).setResizable(false);
            jTableP1.getColumnModel().getColumn(1).setResizable(false);
        }

        jLabel8.setFont(new java.awt.Font("Eras Light ITC", 1, 14)); // NOI18N
        jLabel8.setText("Ingrese codigo de producto:");

        jbGuardar.setFont(new java.awt.Font("Eras Light ITC", 1, 14)); // NOI18N
        jbGuardar.setText("Guardar");
        jbGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGuardarActionPerformed(evt);
            }
        });

        jbNuevo.setFont(new java.awt.Font("Eras Light ITC", 1, 14)); // NOI18N
        jbNuevo.setText("Nuevo");
        jbNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNuevoActionPerformed(evt);
            }
        });

        jbLimpiar.setFont(new java.awt.Font("Eras Light ITC", 1, 14)); // NOI18N
        jbLimpiar.setText("Eliminar");
        jbLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbLimpiarActionPerformed(evt);
            }
        });

        jToggleButton1.setText("Salir");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        jTableP2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableP2.setFocusable(false);
        jTableP2 = new javax.swing.JTable(){
            public boolean isCellEditable(int f, int c){
                return false;
            }
        };
        jTableP2.getTableHeader().setResizingAllowed(false);
        jTableP2.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(jTableP2);
        if (jTableP2.getColumnModel().getColumnCount() > 0) {
            jTableP2.getColumnModel().getColumn(0).setResizable(false);
            jTableP2.getColumnModel().getColumn(1).setResizable(false);
            jTableP2.getColumnModel().getColumn(2).setResizable(false);
            jTableP2.getColumnModel().getColumn(3).setResizable(false);
        }

        jLabel2.setFont(new java.awt.Font("Eras Light ITC", 1, 14)); // NOI18N
        jLabel2.setText("Productos Disponibles");

        jLabel9.setFont(new java.awt.Font("Eras Light ITC", 1, 14)); // NOI18N
        jLabel9.setText("Productos No Disponibles");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(60, 60, 60))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jbNuevo)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 528, Short.MAX_VALUE)
                        .addComponent(jbGuardar)
                        .addGap(105, 105, 105))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel6)
                            .addGap(50, 50, 50)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jrbEstadoProd)
                                        .addComponent(jsStock, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(0, 0, Short.MAX_VALUE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(230, 230, 230)
                                    .addComponent(jLabel9)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 133, Short.MAX_VALUE))))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel8)
                            .addGap(237, 237, 237)
                            .addComponent(jLabel2)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jsProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(53, 53, 53)
                                .addComponent(jbBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jtDescProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jtNombreProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(38, 38, 38)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addGap(67, 67, 67)))
                .addComponent(jbLimpiar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 313, Short.MAX_VALUE)
                .addComponent(jToggleButton1)
                .addGap(72, 72, 72))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jbBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jsProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jtNombreProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtDescProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(48, 48, 48)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jsStock, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(47, 47, 47)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jrbEstadoProd)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(132, 132, 132)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbLimpiar)
                    .addComponent(jbGuardar)
                    .addComponent(jbNuevo)
                    .addComponent(jToggleButton1))
                .addContainerGap(231, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1350, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 927, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarActionPerformed
        // TODO add your handling code here:

        try {
            int idProducto = (int) jsProducto.getValue();
            Producto pedi = pd.buscarProductos(idProducto);
            if (pedi != null) {
                String nombre = pedi.getNombreProducto();
                String descripcion = pedi.getDescripcion();

                jtNombreProducto.setText(nombre);
                jtDescProducto.setText(descripcion);
                jrbEstadoProd.setSelected(pedi.isEstado());

                double precio = pedi.getPrecio();
                int stock = pedi.getStock();
                jtPrecio.setText(String.valueOf(precio));
                jsStock.setValue(stock);

                activarCampos();
                jbNuevo.setEnabled(false);
                jbLimpiar.setEnabled(true);
                jbGuardar.setEnabled(true);

                JOptionPane.showMessageDialog(null, "Producto Encontrado");
            } else {
                jbNuevo.setEnabled(true);
                limpiar();
                activarCampos();
                desactivarCampos();  
            }

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Ingresar codigo de producto");
            limpiar();
            //desactivarCampos();

        }
    }//GEN-LAST:event_jbBuscarActionPerformed

    private void jbLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbLimpiarActionPerformed
        // TODO add your handling code here:

        try {

            int idProducto = (int) jsProducto.getValue();
            Producto producto = pd.buscarProductos(idProducto);
            if (producto != null) {

                jtNombreProducto.setText(producto.getNombreProducto());
                jtDescProducto.setText(producto.getDescripcion());
                jtPrecio.setText(String.valueOf(producto.getPrecio()));
            

                pd.darDebajaProducto(idProducto);

            }
            limpiar();
            desactivarCampos();
             jbNuevo.setEnabled(true);
            jbGuardar.setEnabled(false);
            jbLimpiar.setEnabled(false);
            borrarFilasP1();
            borrarFilasP2();
            armarTablaP1();
            armarTablaP2();
            
            
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Numero de producto invalido");
            limpiar();
            desactivarCampos();
            jbNuevo.setEnabled(true);

        }
    }//GEN-LAST:event_jbLimpiarActionPerformed

    private void jbNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNuevoActionPerformed
        // TODO add your handling code here:
        activarCampos();
        limpiar();
        jrbEstadoProd.setSelected(false);
        jsStock.setEnabled(true);
        jbLimpiar.setEnabled(false);
        jbNuevo.setEnabled(true);
        jbGuardar.setEnabled(true);


    }//GEN-LAST:event_jbNuevoActionPerformed

    private void jbGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGuardarActionPerformed
        // TODO add your handling code here:

        try {
            int idProducto = (int) jsProducto.getValue();
            Producto producto = pd.buscarProductos(idProducto);

            String nombreP = jtNombreProducto.getText();
            String descripcion = jtDescProducto.getText();
            String precioP = jtPrecio.getText();
            int srockP = (int) jsStock.getValue();
            boolean estado = jrbEstadoProd.isSelected();

            if (!nombreP.isEmpty()) {  // && !descripcion.isEmpty() && nombreP.matches("^[a-zA-Z ]+$") && descripcion.matches("^[a-zA-Z ]+$")
                try {
                    double precio = Double.parseDouble(precioP);

                    if (precio > 0) {
                        if (producto == null) {
                            Producto prod = new Producto();
                            prod.setIdProducto(idProducto);
                            prod.setNombreProducto(nombreP);
                            prod.setDescripcion(descripcion);
                            prod.setPrecio(precio);
                            prod.setStock(srockP);
                            prod.setEstado(estado);
                            pd.guardarProducto(prod);
                        } else {
                            producto.setNombreProducto(nombreP);
                            producto.setDescripcion(descripcion);
                            producto.setPrecio(precio);
                            producto.setStock(srockP);
                            producto.setEstado(estado);
                            pd.modificarProducto(producto);
                        }

                        limpiar();
                        desactivarCampos();
                        jbNuevo.setEnabled(true);
                        jbGuardar.setEnabled(false);
                        jbLimpiar.setEnabled(false);
                        
                        borrarFilasP1();
                        borrarFilasP2();
                        armarTablaP1();
                        armarTablaP2();
                        
                    } else {
                        JOptionPane.showMessageDialog(this, "El precio debe ser mayor que cero.");
                    }
                } catch (NumberFormatException e) {
                    //JOptionPane.showMessageDialog(this, "Error en el precio. Debe ingresar un número válido.");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Error en el nombre y descripción. Solo se permiten caracteres o no puede dejar campos vacíos.");
            }
        } catch (NumberFormatException a) {
            //JOptionPane.showMessageDialog(this, "Ingresar un código de producto válido.");
        }

    }//GEN-LAST:event_jbGuardarActionPerformed

    private void jtNombreProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtNombreProductoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtNombreProductoActionPerformed

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        // TODO add your handling code here:
         int eleccion = JOptionPane.showConfirmDialog(this, "Realmente desea salir?", "Confirmacion", JOptionPane.YES_NO_OPTION);
        if (eleccion == JOptionPane.YES_OPTION) {
            dispose();
        } else if (eleccion == JOptionPane.NO_OPTION) {
            JOptionPane.showConfirmDialog(null, "Desea seguir trabajando?", "Confirmacion", JOptionPane.CLOSED_OPTION);
        }
    }//GEN-LAST:event_jToggleButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableP1;
    private javax.swing.JTable jTableP2;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JButton jbBuscar;
    private javax.swing.JButton jbGuardar;
    private javax.swing.JButton jbLimpiar;
    private javax.swing.JButton jbNuevo;
    private javax.swing.JRadioButton jrbEstadoProd;
    private javax.swing.JSpinner jsProducto;
    private javax.swing.JSpinner jsStock;
    private javax.swing.JTextField jtDescProducto;
    private javax.swing.JTextField jtNombreProducto;
    private javax.swing.JTextField jtPrecio;
    // End of variables declaration//GEN-END:variables

    private void desactivarCampos() {
        jtNombreProducto.setEnabled(false);
        jtDescProducto.setEnabled(false);
        jtPrecio.setEnabled(false);
        jsStock.setEnabled(false);
        jrbEstadoProd.setEnabled(false);
    }

    private void activarCampos() {
        jtNombreProducto.setEnabled(true);
        jtDescProducto.setEnabled(true);
        jtPrecio.setEnabled(true);
        jsStock.setEnabled(true);
        jrbEstadoProd.setEnabled(true);
    }

    public void limpiar() {

        jtNombreProducto.setText("");
        jtDescProducto.setText("");
        jtPrecio.setText("");
        jsStock.setValue(0);
        jrbEstadoProd.setSelected(false);

    }
    
    private void armarCabeceraP1(){

        modelo1.addColumn("IdProducto");
        modelo1.addColumn("NombreProducto");
        modelo1.addColumn("Descripcion");
        modelo1.addColumn("Precio");
        modelo1.addColumn("Stock");
        
        jTableP1.setModel(modelo1);
        
    }
    
    private void armarTablaP1(){
        
        List<Producto> listarPro = pd.listarProductos();
         
        for(Producto pro : listarPro){

            modelo1.addRow(new Object[]{
            pro.getIdProducto(),
            pro.getNombreProducto(),
            pro.getDescripcion(),
            pro.getPrecio(),
            pro.getStock()
            });
        }
               
    }
    
    private void borrarFilasP1(){
        
        int filas = jTableP1.getRowCount()-1;
        for(int f = filas; f>=0;f--){
        
            modelo1.removeRow(f);
        }
    }
    
    private void armarCabeceraP2(){

        modelo2.addColumn("IdProducto");
        modelo2.addColumn("NombreProducto");
        modelo2.addColumn("Descripcion");
        modelo2.addColumn("Precio");
        modelo2.addColumn("Stock");
        
        jTableP2.setModel(modelo2);
        
    }
    
    private void armarTablaP2(){
        
        List<Producto> listarPro = pd.listarProductosNo();
         
        for(Producto pro : listarPro){

            modelo2.addRow(new Object[]{
            pro.getIdProducto(),
            pro.getNombreProducto(),
            pro.getDescripcion(),
            pro.getPrecio(),
            pro.getStock()
            });
        }
               
    }
    
    private void borrarFilasP2(){
        
        int filas = jTableP2.getRowCount()-1;
        for(int f = filas; f>=0;f--){
        
            modelo2.removeRow(f);
        }
    }
    
    
}
