
package restaurante.Vistas;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import restaurante.AccesoDatos.ProductoData;
import restaurante.Entidades.Producto;


public class ListaDeProductos extends javax.swing.JInternalFrame {
    
    private DefaultTableModel modelo = new DefaultTableModel();
    ProductoData prod = new ProductoData();
    
    public boolean isCellEditable(int f, int c){
        return false;
    }

    /**
     * Creates new form ListaDeProductos
     */
    public ListaDeProductos() {
        initComponents();
        
        armarCabecera();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jtfListPro = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtListarPro = new javax.swing.JTable();
        jbSalida = new javax.swing.JButton();

        jLabel1.setText("Ingrese el Nombre del Producto");

        jtfListPro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfListProKeyReleased(evt);
            }
        });

        jtListarPro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jtListarPro);

        jbSalida.setText("Salir");
        jbSalida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalidaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jtfListPro, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 630, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(15, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jbSalida)
                .addGap(46, 46, 46))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jtfListPro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(jbSalida)
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtfListProKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfListProKeyReleased
        // TODO add your handling code here:

        borrarFilas();
        for(Producto pro : prod.listarProductos()){
            
            if(pro.getNombreProducto().toUpperCase().startsWith(jtfListPro.getText().toUpperCase())){
                
                modelo.addRow(new Object[]{
                    pro.getCodigoProducto(),
                    pro.getNombreProducto(),
                    pro.getDescripcion(),
                    pro.getPrecio(),
                    pro.getStock()
                });
                
            }
        
        }

    }//GEN-LAST:event_jtfListProKeyReleased

    private void jbSalidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalidaActionPerformed
            // TODO add your handling code here:
        int eleccion = JOptionPane.showConfirmDialog(this, "¿Desea salir del Formulario?", "Confirmacion", JOptionPane.YES_NO_OPTION);
            if (eleccion== JOptionPane.YES_OPTION){
                dispose();
            }else if (eleccion== JOptionPane.NO_OPTION){
                JOptionPane.showConfirmDialog(null, "¿Desea seguir en el Formulario?", "Confirmacion", JOptionPane.CLOSED_OPTION);
            }
    }//GEN-LAST:event_jbSalidaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbSalida;
    private javax.swing.JTable jtListarPro;
    private javax.swing.JTextField jtfListPro;
    // End of variables declaration//GEN-END:variables

    private void armarCabecera(){

        modelo.addColumn("Codigo Producto");
        modelo.addColumn("Nombre Producto");
        modelo.addColumn("Descripcion");
        modelo.addColumn("Precio");
        modelo.addColumn("Stock");
        jtListarPro.setModel(modelo);
    
    }
    private void borrarFilas(){
        
        int filas = jtListarPro.getRowCount()-1;
        for(int f = filas; f>=0;f--){
        
            modelo.removeRow(f);
        }
    }
}
