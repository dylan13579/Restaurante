
package restaurante.Vistas;

import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.SpinnerNumberModel;
import javax.swing.table.DefaultTableModel;
import restaurante.AccesoDatos.MesaData;
import restaurante.Entidades.Mesa;

public class FormularioMesa extends javax.swing.JInternalFrame {
    
    private MesaData md;
    private DefaultTableModel modelo1 = new DefaultTableModel();
    private DefaultTableModel modelo2 = new DefaultTableModel();
    private List<Mesa> listaM;
    
    public FormularioMesa() {
        initComponents();
        
        SpinnerNumberModel num = new SpinnerNumberModel();
        num.setMinimum(0);
        jsNroMesa.setModel(num);//limitar spinner
        
        armarCabecera1();
        armarCabecera2();
        md=new MesaData();
        listaM = md.listarMesasdisponibles();
        armarTabla1();
        armarTabla2();
        
        desactivarCampos();
        jbGuardarMesa.setEnabled(false);
        jbLimpiar.setEnabled(false); 
        jbNuevaMesa.setEnabled(false);
        jbBuscarMesa.setEnabled(true);
       
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jbBuscarMesa = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jrbActivaMesa = new javax.swing.JRadioButton();
        jbNuevaMesa = new javax.swing.JButton();
        jbLimpiar = new javax.swing.JButton();
        jbSalir = new javax.swing.JButton();
        jtDescripMesa = new javax.swing.JTextField();
        jbGuardarMesa = new javax.swing.JButton();
        jsNroMesa = new javax.swing.JSpinner();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setTitle("Registro De Las Mesas");

        jLabel2.setFont(new java.awt.Font("Eras Light ITC", 1, 14)); // NOI18N
        jLabel2.setText("Numero de Mesa:");

        jbBuscarMesa.setText("Buscar");
        jbBuscarMesa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarMesaActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Eras Light ITC", 1, 14)); // NOI18N
        jLabel3.setText("Descripcion:");

        jLabel4.setFont(new java.awt.Font("Eras Light ITC", 1, 14)); // NOI18N
        jLabel4.setText("Estado:");

        jrbActivaMesa.setFont(new java.awt.Font("Eras Light ITC", 1, 12)); // NOI18N
        jrbActivaMesa.setText("Reservada");

        jbNuevaMesa.setText("Nueva");
        jbNuevaMesa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNuevaMesaActionPerformed(evt);
            }
        });

        jbLimpiar.setText("Limpiar");
        jbLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbLimpiarActionPerformed(evt);
            }
        });

        jbSalir.setText("Salir");
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });

        jtDescripMesa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtDescripMesaActionPerformed(evt);
            }
        });

        jbGuardarMesa.setText("Guardar");
        jbGuardarMesa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGuardarMesaActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "IdMesa", "NumeroMesa", "Descripcion"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "idmesa", "numeroMesa", "descripcion"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jLabel1.setFont(new java.awt.Font("Eras Light ITC", 1, 14)); // NOI18N
        jLabel1.setText("Disponibles para Servicio");

        jLabel5.setFont(new java.awt.Font("Eras Light ITC", 1, 14)); // NOI18N
        jLabel5.setText("No Disponibles para Servicio");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbNuevaMesa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbGuardarMesa)
                        .addGap(50, 50, 50)
                        .addComponent(jbLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jrbActivaMesa)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jsNroMesa, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jbBuscarMesa))
                                .addComponent(jtDescripMesa, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 373, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addComponent(jbSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(33, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(134, 134, 134))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(120, 120, 120))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jsNroMesa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(jbBuscarMesa))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jtDescripMesa)
                                .addGap(55, 55, 55))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jrbActivaMesa, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(65, 65, 65)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jbNuevaMesa)
                            .addComponent(jbGuardarMesa)
                            .addComponent(jbLimpiar)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(14, 14, 14)
                .addComponent(jbSalir)
                .addGap(31, 31, 31))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        // TODO add your handling code here:
        int eleccion = JOptionPane.showConfirmDialog(this, "¿Desea salir del Formulario?", "Confirmacion", JOptionPane.YES_NO_OPTION);
            if (eleccion== JOptionPane.YES_OPTION){
                dispose();
            }else if (eleccion== JOptionPane.NO_OPTION){
                JOptionPane.showConfirmDialog(null, "¿Desea seguir en el Formulario?", "Confirmacion", JOptionPane.CLOSED_OPTION);
            }
    }//GEN-LAST:event_jbSalirActionPerformed

    private void jbBuscarMesaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarMesaActionPerformed
        // TODO add your handling code here:
      
        try{
             jsNroMesa.setEnabled(false);
                int numeroMesa=(int) jsNroMesa.getValue();
                Mesa mesa=md.buscarMesaPorNum(numeroMesa);
                if(mesa != null){
                    jtDescripMesa.setText(mesa.getDescripcion());
                    jrbActivaMesa.setSelected(mesa.isEstado());
                    
                            
                   activarCampos();
                
                  jbNuevaMesa.setEnabled(false);
                  jbGuardarMesa.setEnabled(true);
                  jbLimpiar.setEnabled(true);
                
                  JOptionPane.showMessageDialog(null, "Mesa Encontrada");
                }else{
                    jbNuevaMesa.setEnabled(true);
                    limpiar();
                    activarCampos();
                    desactivarCampos();                             
                }
                            
        }catch(NumberFormatException m){
            JOptionPane.showMessageDialog(this, "Debe Ingresar un Numero de Mesa Valido");
            
            limpiar();
            desactivarCampos();        
        }
    }//GEN-LAST:event_jbBuscarMesaActionPerformed

    private void jbNuevaMesaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNuevaMesaActionPerformed
        // TODO add your handling code here:

        activarCampos();
        limpiar();
        jbNuevaMesa.setEnabled(false);
        jbLimpiar.setEnabled(false);
        jbBuscarMesa.setEnabled(false);
        jbGuardarMesa.setEnabled(true);
      
        
    }//GEN-LAST:event_jbNuevaMesaActionPerformed

    private void jbGuardarMesaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGuardarMesaActionPerformed
        // TODO add your handling code here:

        try{
            int numeroMesa=(int) jsNroMesa.getValue();
            String descripcion=jtDescripMesa.getText();
            boolean estado=jrbActivaMesa.isSelected();
            
            if(!estado){
                estado = false;
            }
            if(!descripcion.isEmpty() && descripcion.matches("^[a-zA-Z ]+$")){
               Mesa mesa=md.buscarMesaPorNum(numeroMesa);
            
               if(mesa == null){
                
                    mesa=new Mesa(numeroMesa, descripcion, estado);
                    md.guardarMesa(mesa);
                  }else{
                   mesa.setDescripcion(descripcion);
                   mesa.setEstado(estado);
                   md.modificarMesa(mesa);
                
                    limpiar();
                    desactivarCampos();
                
                    jbLimpiar.setEnabled(false);            
                  }
                  jbNuevaMesa.setEnabled(false);
                  jbGuardarMesa.setEnabled(false);
                 
                  borrarFilas1();
                  borrarFilas2();
                  armarTabla1();
                  armarTabla2();
                  
            }else{
                JOptionPane.showMessageDialog(null, "No puede ingresar numeros");
            }
        
        }catch(NumberFormatException m){
            JOptionPane.showMessageDialog(this, "No puede dejar campos vacios");
        }

    }//GEN-LAST:event_jbGuardarMesaActionPerformed

    private void jbLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbLimpiarActionPerformed
        // TODO add your handling code here:

        try{
            int numeroMesa=(int) jsNroMesa.getValue();
            Mesa mesa=md.buscarMesaPorNum(numeroMesa);
            if(mesa !=null){
                jtDescripMesa.setText(mesa.getDescripcion());
                jrbActivaMesa.setSelected(mesa.isEstado());
                
                md.darBajaMesaNumero(numeroMesa);  
            }
            
            limpiar();
            desactivarCampos();
            jbGuardarMesa.setEnabled(false);
            jbLimpiar.setEnabled(false); 
            borrarFilas1();
            borrarFilas2();
            armarTabla1();
            armarTabla2();
        
        }catch(NumberFormatException m){
            JOptionPane.showMessageDialog(this, "Numero de mesa invalido");       
        }

    }//GEN-LAST:event_jbLimpiarActionPerformed

    private void jtDescripMesaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtDescripMesaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtDescripMesaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JButton jbBuscarMesa;
    private javax.swing.JButton jbGuardarMesa;
    private javax.swing.JButton jbLimpiar;
    private javax.swing.JButton jbNuevaMesa;
    private javax.swing.JButton jbSalir;
    private javax.swing.JRadioButton jrbActivaMesa;
    private javax.swing.JSpinner jsNroMesa;
    private javax.swing.JTextField jtDescripMesa;
    // End of variables declaration//GEN-END:variables


    private void desactivarCampos(){        
        jtDescripMesa.setEnabled(false);
        jrbActivaMesa.setEnabled(false);                    
    } 
    
    private void activarCampos(){
        jsNroMesa.setEnabled(true);
        jtDescripMesa.setEnabled(true);
        jrbActivaMesa.setEnabled(true);
    }
    
    private void limpiar(){
        
        jtDescripMesa.setText("");
        jrbActivaMesa.setSelected(false);
    }
    
    private void armarCabecera1(){

        modelo1.addColumn("NumeroMesa ");
        modelo1.addColumn("Descripcion");
        
        jTable1.setModel(modelo1);
        
    }
    private void borrarFilas1(){
        
        int filas = jTable1.getRowCount()-1;
        for(int f = filas; f>=0;f--){
        
            modelo1.removeRow(f);
        }
    }
    
    private void armarTabla1(){
        
        List<Mesa> listarM = md.listarMesasdisponibles();
         
        for(Mesa mesa : listarM){

            modelo1.addRow(new Object[]{
            mesa.getNumeroMesa(),
            mesa.getDescripcion()
            });
        }
               
    }
    
    private void armarCabecera2(){

        modelo2.addColumn("NumeroMesa ");
        modelo2.addColumn("Descripcion");
        
        jTable2.setModel(modelo2);
        
    }
    
    private void borrarFilas2(){
        
        int filas = jTable2.getRowCount()-1;
        for(int f = filas; f>=0;f--){
        
            modelo2.removeRow(f);
        }
    }
    
    private void armarTabla2(){
        
        List<Mesa> listarM = md.listarMesasNodisponibles();
         
        for(Mesa mesa : listarM){

            modelo2.addRow(new Object[]{
            mesa.getNumeroMesa(),
            mesa.getDescripcion()
            });
        }
               
    }
    
}
